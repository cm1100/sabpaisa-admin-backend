# Generated by Django 5.1 on 2025-08-31 14:18

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='FeeCalculationLog',
            fields=[
                ('calc_id', models.AutoField(primary_key=True, serialize=False)),
                ('transaction_id', models.CharField(max_length=100)),
                ('fee_id', models.IntegerField()),
                ('client_id', models.CharField(max_length=50)),
                ('transaction_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('payment_method', models.CharField(max_length=50)),
                ('calculated_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('calculation_method', models.CharField(choices=[('AUTO', 'Automatic'), ('MANUAL', 'Manual Override'), ('PROMO', 'Promotional'), ('BULK', 'Bulk Discount'), ('CUSTOM', 'Custom Logic')], max_length=20)),
                ('calculation_details', models.JSONField(default=dict)),
                ('promo_code_applied', models.CharField(blank=True, max_length=50, null=True)),
                ('discount_amount', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('final_fee_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fee_calculation_log',
                'managed': True,
                'indexes': [models.Index(fields=['transaction_id'], name='fee_calcula_transac_ed93cb_idx'), models.Index(fields=['client_id', 'created_at'], name='fee_calcula_client__821f40_idx')],
            },
        ),
        migrations.CreateModel(
            name='FeeConfiguration',
            fields=[
                ('fee_id', models.AutoField(primary_key=True, serialize=False)),
                ('client_id', models.CharField(max_length=50)),
                ('fee_name', models.CharField(max_length=100)),
                ('fee_type', models.CharField(choices=[('TRANSACTION', 'Transaction Fee'), ('PROCESSING', 'Processing Fee'), ('SETTLEMENT', 'Settlement Fee'), ('REFUND', 'Refund Fee'), ('CHARGEBACK', 'Chargeback Fee'), ('MONTHLY', 'Monthly Fee'), ('ANNUAL', 'Annual Fee'), ('SETUP', 'Setup Fee')], max_length=20)),
                ('fee_structure', models.CharField(choices=[('FLAT', 'Flat Rate'), ('PERCENTAGE', 'Percentage'), ('TIERED', 'Tiered Pricing'), ('HYBRID', 'Hybrid (Percentage + Flat)'), ('VOLUME_BASED', 'Volume Based'), ('CUSTOM', 'Custom Logic')], max_length=20)),
                ('base_rate', models.DecimalField(decimal_places=4, default=0, max_digits=10)),
                ('minimum_fee', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('maximum_fee', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('tier_rates', models.JSONField(default=list)),
                ('volume_slabs', models.JSONField(default=list)),
                ('payment_method_rates', models.JSONField(default=dict)),
                ('conditions', models.JSONField(default=dict)),
                ('effective_from', models.DateTimeField()),
                ('effective_until', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('requires_approval', models.BooleanField(default=False)),
                ('approval_status', models.CharField(default='APPROVED', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.CharField(max_length=100)),
                ('approved_by', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'fee_configuration',
                'managed': True,
                'unique_together': {('client_id', 'fee_type', 'effective_from')},
            },
        ),
        migrations.CreateModel(
            name='FeeReconciliation',
            fields=[
                ('recon_id', models.AutoField(primary_key=True, serialize=False)),
                ('period', models.CharField(max_length=20)),
                ('client_id', models.CharField(max_length=50)),
                ('total_transactions', models.IntegerField(default=0)),
                ('total_transaction_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_fees_charged', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_fees_collected', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('calculated_fees', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('variance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('variance_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('fee_breakdown', models.JSONField(default=dict)),
                ('discrepancy_details', models.JSONField(default=list)),
                ('discrepancy_count', models.IntegerField(default=0)),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('IN_PROGRESS', 'In Progress'), ('COMPLETED', 'Completed'), ('DISCREPANCY', 'Discrepancy Found'), ('RESOLVED', 'Resolved')], default='PENDING', max_length=20)),
                ('reconciled_at', models.DateTimeField(blank=True, null=True)),
                ('reconciled_by', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'fee_reconciliation',
                'managed': True,
                'indexes': [models.Index(fields=['client_id', 'period'], name='fee_reconci_client__1c2190_idx'), models.Index(fields=['status'], name='fee_reconci_status_8af1e7_idx')],
                'unique_together': {('period', 'client_id')},
            },
        ),
        migrations.CreateModel(
            name='PromotionalFees',
            fields=[
                ('promo_id', models.AutoField(primary_key=True, serialize=False)),
                ('client_id', models.CharField(max_length=50)),
                ('promo_code', models.CharField(max_length=50, unique=True)),
                ('promo_name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('discount_type', models.CharField(choices=[('PERCENTAGE', 'Percentage Discount'), ('FLAT', 'Flat Discount'), ('WAIVER', 'Fee Waiver'), ('CASHBACK', 'Cashback')], max_length=20)),
                ('discount_value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('max_discount_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('valid_from', models.DateTimeField()),
                ('valid_until', models.DateTimeField()),
                ('usage_limit', models.IntegerField(default=1)),
                ('used_count', models.IntegerField(default=0)),
                ('usage_per_client', models.IntegerField(default=1)),
                ('minimum_transaction_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('applicable_payment_methods', models.JSONField(default=list)),
                ('applicable_fee_types', models.JSONField(default=list)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('EXPIRED', 'Expired'), ('EXHAUSTED', 'Exhausted')], default='ACTIVE', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'promotional_fees',
                'managed': True,
                'indexes': [models.Index(fields=['promo_code'], name='promotional_promo_c_fc4cf5_idx'), models.Index(fields=['client_id', 'status'], name='promotional_client__24b11e_idx')],
            },
        ),
    ]
